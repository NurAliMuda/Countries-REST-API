{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive - Universiti Teknologi PETRONAS\\\\Desktop\\\\jazroprogrammingtest\\\\src\\\\components\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = 'https://restcountries.com/v3.1/all';\nconst Countries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(''); //state to hold search query\n  const [selectedRegion, setSelectedRegion] = useState(''); // state to hold selected region\n  // const [favorites, setFavorites] = useState([]);\n\n  //fetch data from rest countries API\n  const fetchCountryData = async () => {\n    const response = await fetch(url);\n    const countries = await response.json();\n    setCountries(countries);\n    console.log(countries);\n  };\n  useEffect(() => {\n    fetchCountryData();\n    // setFavorites(JSON.parse(localStorage.getItem('favorites')) || []);  // Load favorites from localStorage when the component mounts\n  }, []);\n\n  // Filter countries based on the search query\n  const filteredCountries = countries.filter(country => (country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) || country.capital && country.capital[0].toLowerCase().includes(searchQuery.toLowerCase())) && (selectedRegion === '' || country.region === selectedRegion));\n\n  // const handleFavoriteClick = (country) => {\n  //     let updatedFavorites;\n  //     if (favorites.some(fav => fav.name.common === country.name.common)) {\n  //       updatedFavorites = favorites.filter(fav => fav.name.common !== country.name.common);\n  //     } else {\n  //       updatedFavorites = [...favorites, country];\n  //     }\n  //     setFavorites(updatedFavorites);\n  //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //   };\n\n  //   const isFavorite = (country) => favorites.some(fav => fav.name.common === country.name.common);\n\n  //call and load database from rest countries API\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value) // Update search query on input change\n        // style={{ margin: '20px', padding: '10px', fontSize: '16px'}}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid\",\n      children: filteredCountries.map(country => {\n        const {\n          name,\n          population,\n          region,\n          capital,\n          flags\n        } = country;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: flags.png,\n              alt: name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Population: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: population\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: region\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: capital\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Countries, \"8u9/pdRs6S4qR6PpPsHoTOlVTsg=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useState","useEffect","Filter","jsxDEV","_jsxDEV","Fragment","_Fragment","url","Countries","_s","countries","setCountries","searchQuery","setSearchQuery","selectedRegion","setSelectedRegion","fetchCountryData","response","fetch","json","console","log","filteredCountries","filter","country","name","common","toLowerCase","includes","capital","region","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","population","flags","src","png","alt","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive - Universiti Teknologi PETRONAS/Desktop/jazroprogrammingtest/src/components/Countries.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport Filter from './Filter'\r\n\r\nconst url = 'https://restcountries.com/v3.1/all'\r\n\r\nconst Countries = () => {\r\n    const [countries, setCountries] = useState([])\r\n    const [searchQuery, setSearchQuery] = useState(''); //state to hold search query\r\n    const [selectedRegion, setSelectedRegion] = useState(''); // state to hold selected region\r\n    // const [favorites, setFavorites] = useState([]);\r\n\r\n//fetch data from rest countries API\r\n    const fetchCountryData = async() => {\r\n        const response = await fetch(url)\r\n        const countries = await response.json()\r\n        setCountries(countries)\r\n        console.log(countries)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCountryData()\r\n        // setFavorites(JSON.parse(localStorage.getItem('favorites')) || []);  // Load favorites from localStorage when the component mounts\r\n    }, [])\r\n\r\n\r\n\r\n// Filter countries based on the search query\r\nconst filteredCountries = countries.filter((country) =>\r\n    (country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      (country.capital && country.capital[0].toLowerCase().includes(searchQuery.toLowerCase()))) &&\r\n    (selectedRegion === '' || country.region === selectedRegion)\r\n  );\r\n\r\n// const handleFavoriteClick = (country) => {\r\n//     let updatedFavorites;\r\n//     if (favorites.some(fav => fav.name.common === country.name.common)) {\r\n//       updatedFavorites = favorites.filter(fav => fav.name.common !== country.name.common);\r\n//     } else {\r\n//       updatedFavorites = [...favorites, country];\r\n//     }\r\n//     setFavorites(updatedFavorites);\r\n//     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n//   };\r\n\r\n//   const isFavorite = (country) => favorites.some(fav => fav.name.common === country.name.common);\r\n\r\n//call and load database from rest countries API\r\n  return (\r\n    <>\r\n    {/* Pass searchQuery, setSearchQuery, selectedRegion, and setSelectedRegion to Filter component */}\r\n    {/* <Filter\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        selectedRegion={selectedRegion}\r\n        setSelectedRegion={setSelectedRegion}\r\n      /> */}\r\n      \r\n     <div className='search-container'>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)} // Update search query on input change\r\n                // style={{ margin: '20px', padding: '10px', fontSize: '16px'}}\r\n        />\r\n    </div>\r\n    <section className='grid'>\r\n    {filteredCountries.map((country) => {\r\n        const {name, population, region, capital, flags} = country\r\n\r\n        return <article key = {name.common}>\r\n            <div>\r\n                <img src={flags.png} alt={name.common} />\r\n                <div className='details'>\r\n                    <h3>{name.common}</h3>\r\n                    <h4>Population: <span>{population}</span></h4>\r\n                    <h4>Region: <span>{region}</span></h4>\r\n                    <h4>Capital: <span>{capital}</span></h4>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    })}\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Countries\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}