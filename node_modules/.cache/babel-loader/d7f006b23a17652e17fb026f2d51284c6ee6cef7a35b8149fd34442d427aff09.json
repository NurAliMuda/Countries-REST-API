{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive - Universiti Teknologi PETRONAS\\\\Desktop\\\\jazroprogrammingtest\\\\src\\\\components\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = 'https://restcountries.com/v3.1/all';\nconst Countries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(''); //state to hold search query\n  const [favorites, setFavorites] = useState([]);\n\n  //fetch data from rest countries API\n  const fetchCountryData = async () => {\n    const response = await fetch(url);\n    const countries = await response.json();\n    setCountries(countries);\n    console.log(countries);\n  };\n  useEffect(() => {\n    fetchCountryData();\n    setFavorites(JSON.parse(localStorage.getItem('favorites')) || []); // Load favorites from localStorage when the component mounts\n  }, []);\n\n  // Filter countries based on the search query\n  const filteredCountries = countries.filter(country => country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) || country.capital && country.capital[0].toLowerCase().includes(searchQuery.toLowerCase()));\n  const handleFavoriteClick = country => {\n    let updatedFavorites;\n    if (favorites.some(fav => fav.name.common === country.name.common)) {\n      updatedFavorites = favorites.filter(fav => fav.name.common !== country.name.common);\n    } else {\n      updatedFavorites = [...favorites, country];\n    }\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n  const isFavorite = country => favorites.some(fav => fav.name.common === country.name.common);\n\n  //call and load database from rest countries API\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value) // Update search query on input change\n        // style={{ margin: '20px', padding: '10px', fontSize: '16px'}}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"grid\",\n      children: filteredCountries.map(country => {\n        const {\n          name,\n          population,\n          region,\n          capital,\n          flags\n        } = country;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: flags.png,\n              alt: name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: name.common\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Population: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: population\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: region\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: capital\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Countries, \"ud3qnRworryMPZ+onV1/rtmlQrY=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","url","Countries","_s","countries","setCountries","searchQuery","setSearchQuery","favorites","setFavorites","fetchCountryData","response","fetch","json","console","log","JSON","parse","localStorage","getItem","filteredCountries","filter","country","name","common","toLowerCase","includes","capital","handleFavoriteClick","updatedFavorites","some","fav","setItem","stringify","isFavorite","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","population","region","flags","src","png","alt","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive - Universiti Teknologi PETRONAS/Desktop/jazroprogrammingtest/src/components/Countries.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst url = 'https://restcountries.com/v3.1/all'\r\n\r\nconst Countries = () => {\r\n    const [countries, setCountries] = useState([])\r\n    const [searchQuery, setSearchQuery] = useState(''); //state to hold search query\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n//fetch data from rest countries API\r\n    const fetchCountryData = async() => {\r\n        const response = await fetch(url)\r\n        const countries = await response.json()\r\n        setCountries(countries)\r\n        console.log(countries)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCountryData()\r\n        setFavorites(JSON.parse(localStorage.getItem('favorites')) || []);  // Load favorites from localStorage when the component mounts\r\n    }, [])\r\n\r\n\r\n\r\n// Filter countries based on the search query\r\nconst filteredCountries = countries.filter((country) =>\r\n    country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    (country.capital && country.capital[0].toLowerCase().includes(searchQuery.toLowerCase()))\r\n);\r\n\r\nconst handleFavoriteClick = (country) => {\r\n    let updatedFavorites;\r\n    if (favorites.some(fav => fav.name.common === country.name.common)) {\r\n      updatedFavorites = favorites.filter(fav => fav.name.common !== country.name.common);\r\n    } else {\r\n      updatedFavorites = [...favorites, country];\r\n    }\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const isFavorite = (country) => favorites.some(fav => fav.name.common === country.name.common);\r\n\r\n//call and load database from rest countries API\r\n  return (\r\n    <>\r\n     {/* Pass searchQuery and setSearchQuery to Filter component\r\n     <Filter searchQuery={searchQuery} setSearchQuery={setSearchQuery} /> */}\r\n     <div className='search-container'>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)} // Update search query on input change\r\n                // style={{ margin: '20px', padding: '10px', fontSize: '16px'}}\r\n        />\r\n    </div>\r\n    <section className='grid'>\r\n    {filteredCountries.map((country) => {\r\n        const {name, population, region, capital, flags} = country\r\n\r\n        return <article key = {name.common}>\r\n            <div>\r\n                <img src={flags.png} alt={name.common} />\r\n                <div className='details'>\r\n                    <h3>{name.common}</h3>\r\n                    <h4>Population: <span>{population}</span></h4>\r\n                    <h4>Region: <span>{region}</span></h4>\r\n                    <h4>Capital: <span>{capital}</span></h4>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    })}\r\n    </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Countries\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}