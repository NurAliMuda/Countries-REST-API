{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\OneDrive - Universiti Teknologi PETRONAS\\\\Desktop\\\\jazroprogrammingtest\\\\src\\\\components\\\\Favourite.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CountryList = ({\n  countries\n}) => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredCountries, setFilteredCountries] = useState(countries);\n\n  // Load favorites from localStorage when the component mounts\n  useEffect(() => {\n    setFavorites(JSON.parse(localStorage.getItem('favorites')) || []);\n  }, []);\n\n  // Filter countries based on the search query\n  useEffect(() => {\n    setFilteredCountries(countries.filter(country => country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) || country.capital && country.capital[0].toLowerCase().includes(searchQuery.toLowerCase())));\n  }, [searchQuery, countries]);\n\n  // Handle favorite button click\n  const handleFavoriteClick = country => {\n    let updatedFavorites;\n    if (favorites.some(fav => fav.name.common === country.name.common)) {\n      updatedFavorites = favorites.filter(fav => fav.name.common !== country.name.common);\n    } else {\n      updatedFavorites = [...favorites, country];\n    }\n    setFavorites(updatedFavorites);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n\n  // Check if a country is already in favorites\n  const isFavorite = country => favorites.some(fav => fav.name.common === country.name.common);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by country or capital...\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value),\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country-list\",\n      children: filteredCountries.map(country => {\n        const {\n          name,\n          population,\n          region,\n          capital,\n          flags\n        } = country;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"country-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: flags.png,\n              alt: `${name.common} flag`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Population: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: population\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: region\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: capital\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `favorite-btn ${isFavorite(country) ? 'favorite' : ''}`,\n              onClick: () => handleFavoriteClick(country),\n              children: \"\\u2764\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, name.common, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CountryList, \"EZfiIp8pC9dAVoGcW8nICvuAGFA=\");\n_c = CountryList;\nexport default CountryList;\nvar _c;\n$RefreshReg$(_c, \"CountryList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CountryList","countries","_s","favorites","setFavorites","searchQuery","setSearchQuery","filteredCountries","setFilteredCountries","JSON","parse","localStorage","getItem","filter","country","name","common","toLowerCase","includes","capital","handleFavoriteClick","updatedFavorites","some","fav","setItem","stringify","isFavorite","children","type","placeholder","value","onChange","e","target","className","fileName","_jsxFileName","lineNumber","columnNumber","map","population","region","flags","src","png","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/OneDrive - Universiti Teknologi PETRONAS/Desktop/jazroprogrammingtest/src/components/Favourite.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CountryList = ({ countries }) => {\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredCountries, setFilteredCountries] = useState(countries);\r\n\r\n  // Load favorites from localStorage when the component mounts\r\n  useEffect(() => {\r\n    setFavorites(JSON.parse(localStorage.getItem('favorites')) || []);\r\n  }, []);\r\n\r\n  // Filter countries based on the search query\r\n  useEffect(() => {\r\n    setFilteredCountries(\r\n      countries.filter((country) =>\r\n        country.name.common.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        (country.capital && country.capital[0].toLowerCase().includes(searchQuery.toLowerCase()))\r\n      )\r\n    );\r\n  }, [searchQuery, countries]);\r\n\r\n  // Handle favorite button click\r\n  const handleFavoriteClick = (country) => {\r\n    let updatedFavorites;\r\n    if (favorites.some(fav => fav.name.common === country.name.common)) {\r\n      updatedFavorites = favorites.filter(fav => fav.name.common !== country.name.common);\r\n    } else {\r\n      updatedFavorites = [...favorites, country];\r\n    }\r\n    setFavorites(updatedFavorites);\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  // Check if a country is already in favorites\r\n  const isFavorite = (country) => favorites.some(fav => fav.name.common === country.name.common);\r\n\r\n  return (\r\n    <>\r\n      {/* Search Bar */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by country or capital...\"\r\n        value={searchQuery}\r\n        onChange={(e) => setSearchQuery(e.target.value)}\r\n        className=\"search-bar\"\r\n      />\r\n\r\n      {/* Country List */}\r\n      <div className=\"country-list\">\r\n        {filteredCountries.map((country) => {\r\n          const { name, population, region, capital, flags } = country;\r\n\r\n          return (\r\n            <article key={name.common} className=\"country-card\">\r\n              <div>\r\n                <img src={flags.png} alt={`${name.common} flag`} />\r\n                <h3>{name.common}</h3>\r\n                <h4>Population: <span>{population}</span></h4>\r\n                <h4>Region: <span>{region}</span></h4>\r\n                <h4>Capital: <span>{capital}</span></h4>\r\n                {/* Favorite Button */}\r\n                <button\r\n                  className={`favorite-btn ${isFavorite(country) ? 'favorite' : ''}`}\r\n                  onClick={() => handleFavoriteClick(country)}\r\n                >\r\n                  ❤️\r\n                </button>\r\n              </div>\r\n            </article>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}